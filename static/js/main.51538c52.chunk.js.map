{"version":3,"sources":["constants/ActionTypes.js","reducers/login.js","reducers/profile.js","reducers/index.js","store/index.js","history.js","Profile/Profile.jsx","actions/axios.js","actions/profile.js","Profile/Profile.container.js","Login/Login.jsx","actions/login.js","Login/Login.container.js","Profile/Edit-profile.jsx","Profile/Edit-profile.container.js","Root.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","PROFILE_REQUEST","PROFILE_SUCCESS","PROFILE_FAILED","EDIT_PROFILE_OTP_REQUEST","EDIT_PROFILE_OTP_SUCCESS","EDIT_PROFILE_OTP_FAILED","FETCHING_START","FETCHING_STOP","VERIFY_OTP_SUCCESS","initialState","fetching","loginInfo","state","action","type","ActionTypes","response","email","user_id","loginEmail","loginId","loginFailed","userProfile","profileInfo","profileFailed","otpResponse","verifyOtpResponse","otpFailed","reducers","combineReducers","middlewareArray","thunk","createLogger","collapsed","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","configureStore","createStore","createHistory","Profile","props","cameraPhoto","videoRef","React","createRef","imagePreviewUrl","uploadImgMsg","currentUploadedImg","dataUri","isCapture","photCaptured","cancelImgUpload","bind","cropImage","onChangeCrop","this","profileData","getProfileInfo","e","files","setState","preventDefault","dataTransfer","target","reader","FileReader","onload","src","result","readAsDataURL","cropper","getCroppedCanvas","cropResult","toDataURL","uploadImgBtn","cancelImg","file","onloadend","openImageSelector","profileImage","userId","id","fetch","method","headers","body","then","json","changePicOption","imagePreview","name","mobile","profile_img","imageCamp","smsCamp","designCamp","prevProfileImg","className","style","height","width","aspectRatio","preview","guides","ref","onClick","float","onChange","onSubmit","_handleSubmit","to","Component","axiosInstance","create","baseURL","userData","dispatch","axios","post","res","data","catch","sendOTP","verifyOTP","otp","connect","payload","Login","loginPassword","redirectToReferrer","showSignupForm","showForgotPasswordForm","handleSubmit","getLoginInfo","prevProps","history","replace","event","fieldName","value","loginData","href","password","EditProfile","existingMobile","updateProfile","otpStatus","status","verifyOtpStatus","console","log","padding","borderBottom","marginBottom","readonly","length","marginLeft","cancelOTP","Fragment","Root","exact","path","component","store","App","ReactDOM","render","document","getElementById","Boolean","location","hostname","match","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51538c52.chunk.js","sourcesContent":["export default {\n  LOGIN_REQUEST: 'LOGIN_REQUEST',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILED: 'LOGIN_FAILED',\n\n  // Profile\n  PROFILE_REQUEST: 'PROFILE_REQUEST',\n  PROFILE_SUCCESS: 'PROFILE_SUCCESS',\n  PROFILE_FAILED: 'PROFILE_FAILED',\n  \n  // Edit profile\n  EDIT_PROFILE_OTP_REQUEST: 'EDIT_PROFILE_OTP_REQUEST',\n  EDIT_PROFILE_OTP_SUCCESS: 'EDIT_PROFILE_OTP_SUCCESS',\n  EDIT_PROFILE_OTP_FAILED: 'EDIT_PROFILE_OTP_FAILED',\n\n  // Fetching\n  FETCHING_START: 'FETCHING_START',\n  FETCHING_STOP: 'FETCHING_STOP',\n\n  // Verify OTP\n  VERIFY_OTP_SUCCESS: 'VERIFY_OTP_SUCCESS'\n}","import ActionTypes from '../constants/ActionTypes';\n\nconst initialState = {\n  fetching: false\n}\n\nconst loginInfo = (state = initialState, action) => {\n\tswitch (action.type) {\n    case ActionTypes.LOGIN_REQUEST:\n      return {\n        ...state,\n        fetching: true\n      };\n    case ActionTypes.LOGIN_SUCCESS:\n      const { email, user_id } = action.response[0]\n      return {\n        ...state,\n        fetching: false,\n        loginEmail: email,\n        loginId: user_id,\n        loginFailed: false\n      };\n    case ActionTypes.LOGIN_FAILED:\n      return {\n        ...state,\n        fetching: false,\n        loginFailed: true\n      };\n    default:\n      return state;\n  }\n}\n\nexport default loginInfo;","import ActionTypes from '../constants/ActionTypes';\n\nconst initialState = {\n  fetching: false\n}\n\nconst userProfile = (state = initialState, action) => {\n\tswitch (action.type) {\n    case ActionTypes.PROFILE_REQUEST || ActionTypes.FETCHING_START:\n      return {\n        ...state,\n        fetching: true\n      };\n    case ActionTypes.PROFILE_SUCCESS:\n      return {\n        ...state,\n        fetching: false,\n        profileInfo: action.response[0]\n      };\n    case ActionTypes.PROFILE_FAILED:\n      return {\n        ...state,\n        fetching: false,\n        profileFailed: true\n      };\n    case ActionTypes.EDIT_PROFILE_OTP_REQUEST:\n      return {\n        ...state,\n        fetching: true\n      }\n    case ActionTypes.EDIT_PROFILE_OTP_SUCCESS:\n      return {\n        ...state,\n        fetching: false,\n        otpResponse: action.response,\n        verifyOtpResponse: {}\n      }\n    case ActionTypes.EDIT_PROFILE_OTP_FAILED:\n      return {\n        ...state,\n        fetching: false,\n        otpFailed: true\n      }\n    case ActionTypes.VERIFY_OTP_SUCCESS:\n      return {\n        ...state,\n        fetching: false,\n        verifyOtpResponse: action.response,\n        otpResponse: {}\n      }\n    default:\n      return state;\n  }\n}\n\nexport default userProfile;","import { combineReducers } from 'redux';\nimport loginInfo from './login';\nimport userProfile from './profile';\n\nconst reducers = combineReducers({\n\tloginInfo,\n\tuserProfile\n});\n\nexport default reducers;\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nimport reducers from '../reducers';\n\nconst middlewareArray = [thunk, createLogger({ collapsed: true })];\nconst composeEnhancers =\ttypeof window === 'object'\n\t&& window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\t? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n\t: compose;\n\nconst enhancer = composeEnhancers(\n\tapplyMiddleware(...middlewareArray)\n);\n\nconst configureStore = () => {\n\treturn createStore(reducers, enhancer);\n};\n\nexport default configureStore;\n","import createHistory from 'history/createHashHistory';\n\nexport default createHistory();\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'cropperjs/dist/cropper.css';\nimport Cropper from 'react-cropper';\n\nexport default class Profile extends Component {\n\n  constructor(props) {\n    super(props);\n    this.cameraPhoto = null;\n    this.videoRef = React.createRef();\n    this.state = {\n      imagePreviewUrl: '',\n      uploadImgMsg: false,\n      currentUploadedImg: '',\n      dataUri: '',\n      isCapture: false,\n      photCaptured: false\n    }\n    this.cancelImgUpload = this.cancelImgUpload.bind(this);\n    this.cropImage = this.cropImage.bind(this);\n    this.onChangeCrop = this.onChangeCrop.bind(this);\n  }\n\n  componentDidMount(){\n    const { loginEmail, loginId } = this.props.loginInfo;\n    const profileData = {\n      loginEmail,\n      loginId\n    }\n    this.props.getProfileInfo(profileData);\n  }\n\n  onChangeCrop(e) {\n    this.setState({\n      isCapture: true\n    })\n    e.preventDefault();\n    let files;\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.setState({ src: reader.result });\n    };\n    reader.readAsDataURL(files[0]);\n  }\n\n  cropImage() {\n    if (typeof this.cropper.getCroppedCanvas() === 'undefined') {\n      return;\n    }\n    this.setState({\n      cropResult: this.cropper.getCroppedCanvas().toDataURL(),\n      isCapture: false\n    }, () => {\n      this.setState({\n        imagePreviewUrl: this.cropper.getCroppedCanvas().toDataURL(),\n        uploadImgBtn: true,\n        cancelImg: true,\n      })\n    });\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n        uploadImgBtn: true,\n        cancelImg: true,\n        uploadImgMsg: false,\n        openImageSelector: false\n      });\n    }\n\n    reader.readAsDataURL(file)\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault();\n    const profileImage = this.state.imagePreviewUrl;\n    const userId = this.props.profileInfo.id;\n    if(this.state.imagePreviewUrl){\t\n          fetch('http://ideaweaver.in/frazil-php/profile-image.php', {\n          //fetch('http://localhost/frazil-php/profile-image.php', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: 'profile-image='+profileImage+'&user-id='+userId,\n          }).then(response => {\n            return response.json();\n          }).then(json => {\n                if(json){\n                  this.setState({\n                    uploadImgBtn: false,\n                    cancelImg: false,\n                    uploadImgMsg: true,\n                    changePicOption: true,\n                    openImageSelector: false,\n                    currentUploadedImg: 'http://ideaweaver.in/frazil-php/'+json\n                    //currentUploadedImg: 'http://localhost/frazil-php/'+json\n                  })\n                }\n          });\n      }\n  }\n\n  cancelImgUpload(){\n    this.setState({\n        imagePreviewUrl: this.state.currentUploadedImg,\n        uploadImgBtn: false,\n        cancelImg: false,\n        changePicOption: true,\n        uploadImgMsg: false\n      });\n  }\n\n  render() {\n    const { name, email, mobile, profile_img, user_id,\n      imageCamp, smsCamp, designCamp } = this.props.profileInfo || {};\n\n    const { uploadImgMsg, isCapture, photCaptured } = this.state;\n\n    let imagePreview;\n    const { imagePreviewUrl } = this.state;\n    const imagePath = 'http://ideaweaver.in/frazil-php/';\n    //const imagePath = 'http://localhost/frazil-php/';\n    let prevProfileImg  = profile_img;\n    if (imagePreviewUrl) {\n      imagePreview = <img src={imagePreviewUrl} />;\n    } else {\n      imagePreview = <img src={`${imagePath}${prevProfileImg}`} />;\n    }\n\n    return(\n      <div className=\"profile__section\">\n        <div id=\"takePhotoByCamera\" className={isCapture && 'cameraOn'}>\n          <Cropper\n            style={{ height: 400, width: '100%' }}\n            aspectRatio={16 / 9}\n            preview=\".img-preview\"\n            guides={false}\n            src={this.state.src}\n            ref={cropper => { this.cropper = cropper; }}\n          />\n          <div>\n            <button onClick={this.cropImage} className=\"btn btn-purple-o\" style={{ float: 'right' }}>\n              Crop Image\n            </button>\n            {/* <div className=\"box\" style={{ width: '50%', float: 'right' }}>\n              <h1>Preview</h1>\n              <div className=\"img-preview\" style={{ width: '100%', float: 'left', height: 300 }} />\n            </div> */}\n          </div>\n        </div>\n        {/* <div id=\"takePhotoByCamera\" className={isCapture && 'cameraOn'}>\n          <button className=\"take_photo_button btn btn-purple-o\" onClick={ () => {\n            this.takePhoto();\n          }}> Take photo </button>\n  \n          <button className=\"stop_photo_button btn btn-ghost-o\" onClick={ () => {\n            this.stopCamera();\n          }}> Stop </button>\n  \n          <video\n            className={photCaptured && 'videoOff'}\n            ref={this.videoRef}\n            autoPlay=\"true\"\n          />\n          <img\n            id=\"capturedImage\"\n            className={photCaptured && 'imageOn'}\n            alt=\"imgCamera\"\n            src={this.state.dataUri}\n          />\n        </div> */}\n        <div className=\"container vertical-center-box\">\n          <div className=\"panel panel-default transparent-bg-box profile-page\">\n            <div className=\"panel-body\">\n              {!name && (<div className=\"text-center\">\n                <span className=\"fa fa-spin fa-spinner fa-3x m-t-rg\"></span>\n              </div>)}\n              <div className=\"panel_section\">\n                <div className=\"profile-img\">\n                  {imagePreview}\n                  <div className=\"photo-edit\">\n                    <span className=\"fa fa-camera\"></span>\n                    {/* <input className=\"fileInput\" type=\"file\" onChange={(e)=>this._handleImageChange(e)} /> */}\n                    <input type=\"file\" onChange={this.onChangeCrop} />\n                  </div>\n                </div>\n                <div className=\"previewComponent text-center\">\n                  <form onSubmit={(e)=>this._handleSubmit(e)}>\n                      {uploadImgMsg && <p className=\"show\">Profile picture upload successfully!</p>}\n                      <div className=\"btn-group\" style={{'margin-top':'5px'}}>\n                        <button className={this.state.uploadImgBtn ? \"btn btn-sm btn-success\" : \"hide\"} type=\"submit\" onClick=\"\">Upload</button>\n                        <button onClick={this.cancelImgUpload} className={this.state.cancelImg ? \"btn btn-sm btn-danger\" : \"hide\"}>Cancel</button>\n                      </div>\n                    </form>\n                </div>\n\n                <div className=\"panel-row panel-row-group m-t-rg m-b-rg\">\n                  <div className=\"row-item\">\n                    <span className=\"fa fa-user fa-stack label\"></span>\n                    <span className=\"label-value\">{name}</span>\n                  </div>\n                  <div className=\"row-item\">\n                    <span className=\"fa fa-envelope fa-stack label\"></span>\n                    <span className=\"label-value\">{email}</span>\n                  </div>\n                  <div className=\"row-item\">\n                    <span className=\"fa fa-phone fa-stack label\"></span>\n                    <span className=\"label-value\">{mobile}</span>\n                  </div>\n                </div>\n\n                <div className=\"text-center m-b-lg\">\n                  <Link to={`/edit-profile/${user_id}/`} className=\"btn btn-purple-o\">Edit profile</Link>\n                </div>\n\n              </div>\n\n              <div className=\"panel_section\">\n\t\t    \t\t\t<div className=\"panel-row panel-row-group m-t-rg m-b-rg\">\n\t\t\t    \t\t\t<div onClick=\"\" className=\"row-item\" style={{'background':'#66a430', 'color': '#fff','border':'none'}}>\n\t\t\t    \t\t\t\t<span className=\"fa fa-user fa-envelope fa-stack label\"></span>\n\t\t\t    \t\t\t\t<span className=\"label-value\">Image campaigns</span>\n\t\t\t    \t\t\t\t<div className=\"counts\">{imageCamp}</div>\n\t\t\t    \t\t\t\t<span className=\"fa fa-stack fa-arrow-right goto-link\"></span>\n\t\t    \t\t\t\t</div>\n\t\t    \t\t\t\t<div onClick=\"\" className=\"row-item\" style={{'background':'#3065a4', 'color': '#fff','border':'none'}}>\n\t\t\t    \t\t\t\t<span className=\"fa fa-comment fa-stack label\"></span>\n\t\t\t    \t\t\t\t<span className=\"label-value\">SMS campaigns</span>\n\t\t\t    \t\t\t\t<div className=\"counts\">{smsCamp}</div>\n\t\t\t    \t\t\t\t<span className=\"fa fa-stack fa-arrow-right goto-link\"></span>\n\t\t    \t\t\t\t</div>\n\t\t    \t\t\t\t<div onClick=\"\" className=\"row-item\" style={{'background':'#e66730', 'color': '#fff','border':'none'}}>\n\t\t\t    \t\t\t\t<span className=\"fa fa-paint-brush fa-stack label\"></span>\n\t\t\t    \t\t\t\t<span className=\"label-value\">Design campaigns</span>\n\t\t\t    \t\t\t\t<div className=\"counts\">{designCamp}</div>\n\t\t\t    \t\t\t\t<span className=\"fa fa-stack fa-arrow-right goto-link\"></span>\n\t\t    \t\t\t\t</div>\n\t\t    \t\t\t</div>\n\n\t\t\t\t\t\t\t</div>\n              </div>\n              </div>\n      </div>\n      </div>\n    )\n  }\n}","import { create } from 'axios';\n\nexport const config = {\n\tbaseURL: 'http://ideaweaver.in/frazil-php',\n\t//baseURL: 'http://localhost/frazil-php'\n};\nconst axiosInstance = create(config);\n\nexport default axiosInstance;\n","import ActionTypes from '../constants/ActionTypes';\nimport axios from './axios';\n\nfunction fetchingStart() {\n\treturn {\n\t\ttype: ActionTypes.FETCHING_START,\n\t};\n}\n\nfunction fetchingStop() {\n\treturn {\n\t\ttype: ActionTypes.FETCHING_STOP,\n\t};\n}\n\nfunction profileRequest() {\n\treturn {\n\t\ttype: ActionTypes.PROFILE_REQUEST,\n\t};\n}\n\nfunction profileSuccess(response) {\n\treturn {\n    type: ActionTypes.PROFILE_SUCCESS,\n    response\n\t};\n}\n\nfunction profileFailed() {\n\treturn {\n\t\ttype: ActionTypes.PROFILE_FAILED,\n\t};\n}\n\nexport function getProfileInfo(userData) {\n\treturn (dispatch) => {\n\t\tdispatch(profileRequest());\n    return axios.post('/profile.php', {\n      email: userData.loginEmail,\n      user_id: userData.loginId,\n    })\n    .then((res) => {\n        dispatch(profileSuccess(res.data));\n    }).catch(() => {\n      dispatch(profileFailed(true));\n    });\n\t};\n}\n\nfunction editProfileOTPRequest() {\n  return {\n    type: ActionTypes.EDIT_PROFILE_OTP_REQUEST\n  }\n}\n\nfunction editProfileOTPSuccess(response) {\n  return {\n    type: ActionTypes.EDIT_PROFILE_OTP_SUCCESS,\n    response\n  }\n}\n\nfunction editProfileOTPFailed() {\n  return {\n    type: ActionTypes.EDIT_PROFILE_OTP_FAILED\n  }\n}\n\nexport function sendOTP(userData) {\n\treturn (dispatch) => {\n\t\tdispatch(editProfileOTPRequest());\n    return axios.post('/send-otp-mobile-verify.php', {\n      userId: userData.userId,\n      mobile: userData.mobile,\n    })\n    .then((res) => {\n        dispatch(editProfileOTPSuccess(res.data));\n    }).catch(() => {\n      dispatch(editProfileOTPFailed(true));\n    });\n\t};\n}\n\nfunction verifyOTPSuccess(response){\n  return {\n    type: ActionTypes.VERIFY_OTP_SUCCESS,\n    response\n  }\n}\n\nexport function verifyOTP(userData) {\n\treturn (dispatch) => {\n\t\tdispatch(fetchingStart());\n    return axios.post('/update-mobile.php', {\n      userId: userData.userId,\n      mobile: userData.mobile,\n      otp: userData.otp\n    })\n    .then((res) => {\n        dispatch(verifyOTPSuccess(res.data));\n    }).catch(() => {\n      dispatch(fetchingStop(true));\n    });\n\t};\n}","import { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getProfileInfo } from '../actions/profile'; \n\nfunction mapStateToProps(state) {\n\treturn {\n    loginInfo: state.loginInfo,\n\t\tprofileInfo: state.userProfile.profileInfo\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tgetProfileInfo: (payload) => {\n\t\t\tdispatch(getProfileInfo(payload));\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React, { Component } from 'react';\nimport history from '../history';\n\nexport default class Login extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loginEmail: '',\n        loginPassword: '',\n        redirectToReferrer: '',\n        showSignupForm: false,\n        showForgotPasswordForm: false\n      }\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.getLoginInfo = this.getLoginInfo.bind(this);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.loginInfo.loginEmail !== this.props.loginInfo.loginEmail) {\n            history.replace('/profile');\n        }\n    }\n\n    handleSubmit(event) {\n      let {name: fieldName, value} = event.target;\n      this.setState({\n        [fieldName]: value\n      });\n    }\n\n    getLoginInfo(){\n      const { loginEmail, loginPassword } = this.state;\n      const loginData = {\n        loginEmail,\n        loginPassword\n      }\n      this.props.getLoginInfo(loginData);\n    }\n    render(){\n        const { showSignupForm, showForgotPasswordForm } = this.state;\n        const { fetching } = this.props.loginInfo;\n        return (\n            <div className=\"container vertical-center-box\">\n                <div className=\"panel\">\n                    <div className=\"panel-body\">\n                        <h3>Login here</h3>\n                        <div className=\"form-group m-b-rg\">\n                            <label>Email</label>\n                            <input type=\"text\" id=\"loginEmail\" name=\"loginEmail\" value={this.state.loginEmail} onChange={this.handleSubmit} className=\"form-control\" />\n                        </div>\n                        <div className=\"form-group m-b-rg\">\n                            <label>Password</label>\n                            <input type=\"password\" id=\"loginPassword\" name=\"loginPassword\" value={this.state.loginPassword} onChange={this.handleSubmit} className=\"form-control\" />\n                        </div>\n                        <button type=\"button\" onClick={this.getLoginInfo} className=\"btn btn-login btn-block\">\n                            { fetching && <span className=\"fa fa-spin fa-spinner\"></span> } Submit\n                        </button>\n                        <div className=\"group-anchor m-t-rg text-center\">\n                            <a href=\"javascript:void(0)\" onClick=\"\">Signup here</a>\n                            <a href=\"javascript:void(0)\" onClick=\"\">Forgot password?</a>\n                        </div>\n                    </div>\n                </div>\n\n                {/*New User, Register here*/}\n\n                { showSignupForm && (\n                    <div className=\"panel\">\n                        <div className=\"panel-body\">\n                            <h3>New user, register here</h3>\n                            <div className=\"form-group m-b-rg\">\n                                <label>Name</label>\n                                <input type=\"text\" id=\"userNameReg\" className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group m-b-rg\">\n                                <label>Email</label>\n                                <input type=\"text\" id=\"userEmailReg\" className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group m-b-rg\">\n                                <label>Password</label>\n                                <input type=\"password\" id=\"userPassReg\" className=\"form-control\" />\n                            </div>\n                            <button type=\"button\" onClick=\"\" className=\"btn btn-login btn-block\"><span className=\"fa fa-spin fa-spinner\"></span> Submit</button>\n                            <div className=\"group-anchor m-t-rg text-center\">\n                                <a href=\"javascript:void(0)\" onClick=\"\">Login here</a>\n                                <a href=\"javascript:void(0)\" onClick=\"\">Forgot password?</a>\n                            </div>\n                        </div>\n                    </div>)\n                }\n\n                {/* Forgot Passowrd */}\n\n                { showForgotPasswordForm && (\n                    <div className=\"panel\">\n                        <div className=\"panel-body\">\n                            <h3>Forgot password?</h3>\n                            <div className=\"form-group m-b-rg\">\n                                <label>Email</label>\n                                <input type=\"text\" id=\"userEmailForPass\" className=\"form-control\" />\n                            </div>\n                            <div className=\"form-group m-b-rg\">\n                                <label>Mobile (Registered)</label>\n                                <input type=\"text\" id=\"userMobForPass\" className=\"form-control\" />\n                            </div>\n                            <button type=\"button\" onClick=\"\" className=\"btn btn-login btn-block\"><span className=\"fa fa-spin fa-spinner\"></span> Submit</button>\n                            <div className=\"group-anchor m-t-rg text-center\">\n                                <a href=\"javascript:void(0)\" onClick=\"\">Login here</a>\n                                <a href=\"javascript:void(0)\" onClick=\"\">Forgot password?</a>\n                            </div>\n                        </div>\n                    </div>)\n                }\n\n            </div>\n        )\n    }\n\n}","import ActionTypes from '../constants/ActionTypes';\nimport axios from './axios';\n\nfunction loginRequest() {\n\treturn {\n\t\ttype: ActionTypes.LOGIN_REQUEST,\n\t};\n}\n\nfunction loginSuccess(response) {\n\treturn {\n    type: ActionTypes.LOGIN_SUCCESS,\n    response\n\t};\n}\n\nfunction loginFailed() {\n\treturn {\n\t\ttype: ActionTypes.LOGIN_FAILED,\n\t};\n}\n\nexport function getLoginInfo(userData) {\n\treturn (dispatch) => {\n\t\tdispatch(loginRequest());\n    return axios.post('/login.php', {\n      email: userData.loginEmail,\n      password: userData.loginPassword,\n    })\n    .then((res) => {\n      if(res.data[0].email) {\n        dispatch(loginSuccess(res.data));\n      } else {\n        dispatch(loginFailed(true));\n      }\n    }).catch(() => {\n      dispatch(loginFailed(true));\n    });\n\t};\n}","import { connect } from 'react-redux';\nimport Login from './Login.jsx';\nimport { getLoginInfo } from '../actions/login'; \n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tloginInfo: state.loginInfo\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tgetLoginInfo: (payload) => {\n\t\t\tdispatch(getLoginInfo(payload));\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n\nexport default class EditProfile extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      ...this.props.profileInfo,\n      ...this.props.otpResponse,\n      existingMobile: ''\n    }\n    this.onChange = this.onChange.bind(this);\n    this.updateProfile = this.updateProfile.bind(this);\n    this.sendOTP = this.sendOTP.bind(this);\n    this.verifyOTP = this.verifyOTP.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.otpResponse !== prevProps.otpResponse) {\n      this.setState({\n        otpStatus: this.props.otpResponse.status\n      })\n    }\n    if(this.props.verifyOtpResponse !== prevProps.verifyOtpResponse) {\n      this.setState({\n        verifyOtpStatus: this.props.verifyOtpResponse.status,\n      })\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  updateProfile() {\n    console.log('update profile');\n  }\n\n  sendOTP(){\n    this.setState({\n      existingMobile: this.state.mobile\n    })\n    const userData = {\n      userId: this.state.user_id,\n      mobile: this.state.mobile\n    }\n    this.props.sendOTP(userData);\n  }\n\n  verifyOTP() {\n    const userData = {\n      userId: this.state.user_id,\n      otp: this.state.otp,\n      mobile: this.state.mobile\n    }\n    this.props.verifyOTP(userData);\n  }\n\n  render(){\n    const { email, name, mobile, otpStatus, otp, verifyOtpStatus, existingMobile } = this.state;\n    console.log('existingMobile', existingMobile);\n    return(\n      <div className=\"profile__section\">\n        <div className=\"container vertical-center-box\">\n          <div className=\"panel panel-default transparent-bg-box profile-page\">\n            <div className=\"panel-body\">\n              {!name && (<div className=\"text-center\">\n                <span className=\"fa fa-spin fa-spinner fa-3x m-t-rg\"></span>\n              </div>)}\n              <div className=\"panel_section\" style={{ padding: '1rem', borderBottom: '1px solid #e2e2e2', marginBottom: '2rem' }}>\n                <div className=\"form-box m-b-lg\">\n                  <ul>\n                    <li>\n                      <span className=\"label\">Full name</span>\n                      <input name=\"name\" className=\"form-control\" onChange={this.onChange} value={name} />\n                    </li>\n                    <li>\n                      <span className=\"label\">Email (Can't change)</span>\n                      <input name=\"email\" readonly className=\"form-control\" value={email} />\n                    </li>\n                    { this.props.profileInfo.mobile === this.state.mobile && (<li>\n                      <div className=\"text-center m-b-lg\">\n                        <button type=\"button\" className=\"btn btn-purple-o\" onClick={this.updateProfile}>Update profile</button>\n                      </div>\n                    </li>)}\n                  </ul>\n                </div>\n              </div>\n              <div className=\"panel_section\">\n                <div className=\"form-box m-b-lg\">\n                  <ul>\n                  { (otpStatus !== 'success') && (<li>\n                      <span className=\"label\">Mobile</span>\n                      <input name=\"mobile\" className=\"form-control\" onChange={this.onChange} value={mobile} />\n                      {mobile.length > 10 ? <small className=\"text-error\">Wrong mobile number</small> : ''}\n                    </li>)}\n                    { this.props.profileInfo.mobile !== this.state.mobile && \n                      this.state.mobile.length === 10 && (<li className=\"text-center\">\n                      <button className=\"btn btn-purple-o\" onClick={this.sendOTP}>Send OTP</button>\n                      <button className=\"btn btn-ghost-o\" style={{ marginLeft: '0.5rem' }} onClick={this.cancelOTP}>Cancel</button>\n                    </li>)}\n                    { verifyOtpStatus === 1 && (<li>\n                      <div className=\"text-success\">Mobile number has been updated.</div>\n                    </li>)}\n                    { verifyOtpStatus === 0 && (<li>\n                      <div className=\"text-error\">Mobile number has been not updated successfully.</div>\n                    </li>)}\n                    { otpStatus === 'success' && (<React.Fragment><li>\n                      <span className=\"label\">OTP</span>\n                      <input name=\"otp\" className=\"form-control\" onChange={this.onChange} value={otp} />\n                    </li>\n                    <li>\n                      <button className=\"btn btn-purple-o\" onClick={this.verifyOTP}>Verify OTP</button>\n                      <button className=\"btn\" onClick={this.cancelOTP}>Cancel</button>\n                    </li></React.Fragment>)}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>  \n      </div>\n    )\n  }\n}","import { connect } from 'react-redux';\nimport EditProfile from './Edit-profile';\nimport { sendOTP, verifyOTP } from '../actions/profile';\nimport { stat } from 'fs';\n\nfunction mapStateToProps(state) {\n\treturn {\n    loginInfo: state.loginInfo,\n\t\tprofileInfo: state.userProfile.profileInfo,\n\t\totpResponse: state.userProfile.otpResponse,\n\t\tverifyOtpResponse: state.userProfile.verifyOtpResponse\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tsendOTP: (userData) => {\n\t\t\tdispatch(sendOTP(userData));\n\t\t},\n\t\tverifyOTP: (userData) => {\n\t\t\tdispatch(verifyOTP(userData));\n\t\t}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport history from './history';\nimport Profile from './Profile/Profile.container';\nimport Login from './Login/Login.container';\nimport EditProfile from './Profile/Edit-profile.container';\n\nconst Root = () => {\n\treturn (\n\t\t<HashRouter history={history}>\n\t\t\t<Switch>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath=\"/\"\n\t\t\t\t\tcomponent={\n\t\t\t\t\t\tLogin\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath=\"/profile\"\n\t\t\t\t\tcomponent={\n\t\t\t\t\t\tProfile\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath=\"/edit-profile/:userId\"\n\t\t\t\t\tcomponent={\n\t\t\t\t\t\tEditProfile\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</HashRouter>\n\t);\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n\tProvider\n} from 'react-redux';\n\n\nimport createStore from './store';\nimport Routes from './Root';\nimport './css/less/styles.css';\n\nconst store = createStore({});\nexport default class App extends React.Component {\n\trender() {\n\t\treturn (\n\t    <Provider store={store}>\n\t\t\t\t\t<div className=\"app\">\n\t\t\t\t\t\t<Routes />\n\t\t\t\t\t</div>\n\t    </Provider>\n\t\t);\n\t}\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}